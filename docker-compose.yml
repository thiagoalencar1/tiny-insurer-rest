services:
  postgres:
    image: postgres:15
    container_name: tiny-insurer-db
    ports: [5432:5432]
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 3s
      timeout: 3s
      retries: 5
    volumes:
      - database:/var/lib/postgresql/data
    networks:
      - my-bridge

  policy-service:
    image: 'ruby:3.3'
    container_name: tiny-insurer-rest
    env_file:
      - .env
    working_dir: /app
    volumes:
      - .:/app
      - rubygems:/usr/local/bundle
    ports: [3001:3001]
    depends_on:
      postgres:
        condition: service_healthy
    tty: true
    stdin_open: true
    networks:
      - my-bridge
    command: bash -c "rm -f tmp/pids/server.pid && bin/setup && rails s -b 0.0.0.0 -p 3001"
    # healthcheck:
    
    #   test: ["CMD-SHELL", "curl", "-I", "http://localhost:3001/up"]
    #   interval: 5s
    #   timeout: 5s
    #   retries: 5
  
  workers:
    image: 'ruby:3.3'
    container_name: tiny-insurer-workers
    env_file:
      - .env
    working_dir: /app
    tty: true
    stdin_open: true
    command: bash -c "rm -f tmp/pids/server.pid && WORKERS=PolicyWorker,PaymentWorker rake sneakers:run"
    networks:
      - my-bridge
    volumes:
      - .:/app
      - rubygems:/usr/local/bundle
    depends_on:
      - policy-service

volumes:
  database:
  rubygems:

networks:
  my-bridge:
    name: my-bridge
